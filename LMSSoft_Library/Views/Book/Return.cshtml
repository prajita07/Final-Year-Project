@model LMSSoft_Library.Models.BookReturnVModel

@{
    ViewData["Title"] = "Book Return";
}

<div class="row">
    <div class="breadcrumbs ace-save-state" id="breadcrumbs">
        <ul class="breadcrumb">
            <li>
                <i class="ace-icon fa fa-home home-icon"></i>
                <a href="@Url.Action("Index","Home")">Home</a>
            </li>
            <li>
                <a href="#">Library</a>
            </li>
            <li>
                <a href="@Url.Action("Return","Book")">Book Return</a>
            </li>

        </ul>
    </div>
</div>
<br />


<div class="main_content well">
    <form asp-controller="Student" asp-action="Create" method="post">
        <script src="~/Content/js/jquery-ui.min.js"></script>

        <div class="form-group">
            <div class="row">
                @using (Html.BeginForm("Return", "Book", FormMethod.Post, new { @id = "form-submit" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-sm-2 form-group">
                        @Html.LabelFor(m => m.Return_Date, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Return_Date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "Date", @readonly = "readonly", @tabindex = "-1" })
                        @Html.ValidationMessageFor(m => m.Return_Date, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group">
                        @Html.LabelFor(m => m.AccessionNo, new { @class = "form-label" })
                        @Html.EditorFor(m => m.AccessionNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.AccessionNo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group">
                        @Html.LabelFor(m => m.ISBN_NO, new { @class = "form-label" })
                        @Html.EditorFor(m => m.ISBN_NO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.ISBN_NO, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group">
                        @Html.LabelFor(m => m.Issue_Date, new { @class = "form-label" })
                        @Html.EditorFor(m => m.Issue_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.Issue_Date, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-1 form-group">
                        @Html.LabelFor(m => m.DueDays, new { @class = "form-label" })
                        @Html.EditorFor(m => m.DueDays, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.DueDays, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-1 form-group">
                        @Html.LabelFor(m => m.Type, new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.Type, (SelectList)ViewBag.lstTypeVal, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-4 form-group">
                        @Html.LabelFor(m => m.BookTitle, new { @class = "form-label" })
                        @Html.EditorFor(m => m.BookTitle, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.BookTitle, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4 form-group">
                        @Html.LabelFor(m => m.BookAuthor, new { @class = "form-label" })
                        @Html.EditorFor(m => m.BookAuthor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.BookAuthor, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-4 form-group" id="dvStaffName">
                        @Html.LabelFor(m => m.StaffName, new { @class = "form-label" })
                        @Html.EditorFor(m => m.StaffName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.StaffName, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-sm-4 form-group" id="dvStudName">
                        @Html.LabelFor(m => m.StudName, new { @class = "form-label" })
                        @Html.EditorFor(m => m.StudName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.StudName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3 form-group" id="dvStudFaculty">
                        @Html.LabelFor(m => m.Faculty, new { @class = "form-label" })
                        @Html.EditorFor(m => m.Faculty, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.Faculty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3 form-group" id="dvStudCourse">
                        @Html.LabelFor(m => m.Course, new { @class = "form-label" })
                        @Html.EditorFor(m => m.Course, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.Course, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group" id="dvStudSem">
                        @Html.LabelFor(m => m.Semester, new { @class = "form-label" })
                        @Html.EditorFor(m => m.Semester, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.Semester, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group" id="dvStudSec">
                        @Html.LabelFor(m => m.Section, new { @class = "form-label" })
                        @Html.EditorFor(m => m.Section, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.Section, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group" id="dvStudRoll">
                        @Html.LabelFor(m => m.RollNo, new { @class = "form-label" })
                        @Html.EditorFor(m => m.RollNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.RollNo, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-2 form-group">
                        @Html.LabelFor(m => m.FineDays, new { @class = "form-label" })
                        @Html.EditorFor(m => m.FineDays, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.FineDays, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-2 form-group">
                        @Html.LabelFor(m => m.FineAmt, new { @class = "form-label" })
                        @Html.EditorFor(m => m.FineAmt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @tabindex = "-1" } })
                        @Html.ValidationMessageFor(m => m.FineAmt, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-4 form-group">
                        @Html.LabelFor(m => m.Remarks, new { @class = "form-label" })
                        @Html.EditorFor(m => m.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4 form-group">
                        <br />
                        <button type="Submit" class="btn btn-sm btn-info">Return</button>
                    </div>
                }
            </div>
        </div>
    </form>

</div>
@*<div class="bottom">
        <a href="@Url.Action("Index","BookRegistration")">Back to List</a>
    </div>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#AccessionNo").autocomplete({
            source: '@Url.Action("GetIssuedBooksList")',
            autoFocus: true,
            change: function (event, ui) {
                $('#ISBN_NO').val('');
                $("#BookTitle").val('');
                $("#BookAuthor").val('');
                LoadBookData();
            }
        });

        $("#Type").change(function () {
            var data = { accno: $("#AccessionNo").val() };
                $.ajax({
                    type: "Post",
                    url: "@Url.Action("GetIssuedBookDetails", "Book")",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(data),
                    datatype: "json",
                    success: function (json) {
                        if (json != null && json.rescode == "400") {
                            if ($("#Type").val() == "Lost") {
                                $("#FineAmt").val(parseFloat(json.price) + parseFloat(json.fineamt));
                            } else {
                                $('#FineAmt').val(json.fineamt);
                            }
                        } else {
                            $("#AccessionNo").val('');
                            alert('Record not found.');
                        }
                    },
                    error: function (json2) {
                        alert('Something went wrong, please try again later.');
                        $("#AccessionNo").val('');
                    }
                });
        });

        function LoadBookData() {
            var data = { accno: $("#AccessionNo").val() };
                $.ajax({
                    type: "Post",
                    url: "@Url.Action("GetIssuedBookDetails", "Book")",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(data),
                    datatype: "json",
                    success: function (json) {
                        if (json != null && json.rescode == "400") {
                            $('#FineDays').val(json.finedays);
                            $('#FineAmt').val(json.fineamt);
                            $('#ISBN_NO').val(json.isbnno);
                            $("#BookTitle").val(json.booktitle);
                            $("#BookAuthor").val(json.author);
                            $("#Faculty").val(json.faculty);
                            $("#Course").val(json.course);
                            $("#Semester").val(json.sem);
                            $("#Section").val(json.sec);
                            $("#RollNo").val(json.rollno);
                            $("#Issue_Date").val(json.issuedate);
                            $("#DueDays").val(json.duedays);
                            if (json.issueto == "Student") {
                                $("#StudName").val(json.studname);

                                $("#dvStaffName").hide();
                                $("#dvStudName").show();
                                $("#dvStudFaculty").show();
                                $("#dvStudCourse").show();
                                $("#dvStudSem").show();
                                $("#dvStudSec").show();
                                $("#dvStudRoll").show();
                            } else {
                                $("#StaffName").val(json.studname);

                                $("#dvStaffName").show();
                                $("#dvStudName").hide();
                                $("#dvStudFaculty").hide();
                                $("#dvStudCourse").hide();
                                $("#dvStudSem").hide();
                                $("#dvStudSec").hide();
                                $("#dvStudRoll").hide();
                            }
                        } else {
                            $("#AccessionNo").val('');
                            alert('Record not found.');
                        }
                    },
                    error: function (json2) {
                        alert('Something went wrong, please try again later.');
                        $("#AccessionNo").val('');
                    }
                });
        }

    </script>
}